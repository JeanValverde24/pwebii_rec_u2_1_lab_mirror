name: SonarCloud & Code Coverage Analysis

on:
  push:
    branches:
      - main
      - master

jobs:
  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore
        working-directory: src

      - name: Build project
        run: dotnet build --no-restore
        working-directory: src

      - name: Run tests and collect coverage
        run: |
          dotnet test --no-build --collect:"XPlat Code Coverage" --settings coverlet.runsettings --logger trx
        working-directory: src

      - name: Verificar archivos de cobertura generados
        run: |
          echo "Listando archivos en src/TestResults/"
          ls -R src/TestResults/ || echo "⚠️ No se encontraron archivos de cobertura."

      - name: Install ReportGenerator
        run: dotnet tool install --global dotnet-reportgenerator-globaltool

      - name: Verify ReportGenerator Installation
        run: |
          ~/.dotnet/tools/reportgenerator --help || echo "✅ ReportGenerator instalado correctamente."

      - name: Convert coverage to HTML
        run: |
          ~/.dotnet/tools/reportgenerator -reports:src/TestResults/**/coverage.cobertura.xml -targetdir:coverage -reporttypes:Html

      - name: Extract coverage percentage
        id: coverage_metrics
        run: |
          TOTAL_COVERAGE=$(grep -oP '(?<=<coverage line-rate=")\d+\.\d+' coverage/index.html || echo "0.00")
          echo "TOTAL_COVERAGE=$TOTAL_COVERAGE" >> $GITHUB_ENV
          echo "Total Coverage: $TOTAL_COVERAGE%"

      - name: Display Coverage Metrics in Annotations
        run: |
          echo "::notice title=Code Coverage Report::| Metric | Value |
          |--------|-------|
          | Total Coverage | ${{ env.TOTAL_COVERAGE }}% |"

  sonar:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: coverage

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'

      - name: Restore dependencies
        run: dotnet restore
        working-directory: src

      - name: Build project
        run: dotnet build --no-restore
        working-directory: src

      - name: Prepare SonarCloud Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet tool install --global dotnet-sonarscanner
          dotnet sonarscanner begin /k:"TU_PROYECTO_KEY" /o:"TU_ORG_KEY" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
        working-directory: src

      - name: Run SonarCloud Analysis
        run: |
          dotnet build
          dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
        working-directory: src

      - name: Fetch SonarCloud Metrics
        id: sonar_metrics
        run: |
          SECURITY_HOTSPOTS=$(curl -s https://sonarcloud.io/api/measures/component?component=TU_PROYECTO_KEY&metricKeys=security_hotspots | jq '.component.measures[0].value')
          CODE_SMELLS=$(curl -s https://sonarcloud.io/api/measures/component?component=TU_PROYECTO_KEY&metricKeys=code_smells | jq '.component.measures[0].value')
          COVERAGE=$(curl -s https://sonarcloud.io/api/measures/component?component=TU_PROYECTO_KEY&metricKeys=coverage | jq '.component.measures[0].value')
          BUGS=$(curl -s https://sonarcloud.io/api/measures/component?component=TU_PROYECTO_KEY&metricKeys=bugs | jq '.component.measures[0].value')
          DUPLICATIONS=$(curl -s https://sonarcloud.io/api/measures/component?component=TU_PROYECTO_KEY&metricKeys=duplicated_lines_density | jq '.component.measures[0].value')

          echo "SECURITY_HOTSPOTS=$SECURITY_HOTSPOTS" >> $GITHUB_ENV
          echo "CODE_SMELLS=$CODE_SMELLS" >> $GITHUB_ENV
          echo "COVERAGE=$COVERAGE" >> $GITHUB_ENV
          echo "BUGS=$BUGS" >> $GITHUB_ENV
          echo "DUPLICATIONS=$DUPLICATIONS" >> $GITHUB_ENV

      - name: Display SonarCloud Metrics in Annotations
        run: |
          echo "::notice title=SonarCloud Report::| Metric | Value |
          |--------|-------|
          | Security Hotspots | ${{ env.SECURITY_HOTSPOTS }} |
          | Code Smells | ${{ env.CODE_SMELLS }} |
          | Coverage | ${{ env.COVERAGE }}% |
          | Bugs | ${{ env.BUGS }} |
          | Duplications | ${{ env.DUPLICATIONS }}% |"
